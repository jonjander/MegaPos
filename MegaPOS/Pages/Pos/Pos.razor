@using MegaPOS.Shared.ModalComponents 
@page "/{id}"
@inherits PosBase

<AddProductModal @ref="AddProductModal"
                 StoreId="@StoreId"
                 OnAddProduct="AddProduct"/>
<CustomersModal @ref="CustomersModal"
                OnSelectedCustomer="ChangeCustomer" />

<CheckoutModal @ref="CheckoutModal" 
               OnCustomerPayed="CustomerPayed"/>

<ChangeProductModal @ref="ChangeProductModal"
                    StoreId="@StoreId"
                    OnProductChanged="ChangeProduct" />

<StoreSetup @ref="StoreSetup" 
            StoreId="@StoreId"/>

<Row Class="pos-head">
    <Column ColumnSize="ColumnSize.Is4" Style="padding-left: 4px; padding-right: 5px;">
        <Button Clicked="AddProductModal.ShowModal"
                Color="Color.Primary">
            + Product
        </Button>
    </Column>
    <Column ColumnSize="ColumnSize.Is5" Style="padding-left: 4px; padding-right: 5px;">
        <Field>
            @if (Customer != null)
            {
            <TextEdit Placeholder="Customer Name" Text="@Customer.Name" TextChanged="ChangeCustomerName" />
            }
        </Field>
    </Column>
    <Column ColumnSize="ColumnSize.Is3" Style="padding-left: 4px; padding-right: 5px;">
        <Button Clicked="CustomersModal.ShowModal"
                Color="Color.Primary">
            Customers
        </Button>
    </Column>
</Row>
<Row Class="pos-body">
    <Column ColumnSize="ColumnSize.Is8">
        <div class="product-container">
            @if (Model?.AvalibleProducts != null && Model.AvalibleProducts.Any())
            {
                foreach (var item in Model?.AvalibleProducts.OrderBy(_ => _.Name).ToList())
                {
                    <ProductCard Model="item"
                                 OnPoductChanged="OpenEditModal"
                                 OnBuyProduct="BuyProduct" />
                }
            }
        </div>
    </Column>
    <Column ColumnSize="ColumnSize.Is4" Style="padding-left: 4px; padding-right: 5px;">
        <div class="cart-container">
            <div class="cart-rows-container">
                @if (Customer != null && Customer.Orders.Any())
                {
                    @foreach (var item in Customer?.Orders.OrderBy(_=>_.Created))
                    {
                        <div Class="cart-row">
                            <div class="cart-row-name">
                                <span class="cart-row-name-product">@item.ProductName</span> <b>@(item.Price.ToString("0.00"))kr</b>
                            </div>
                            <div class="cart-row-actions">
                                <Button Class="cart-delete" Color="Color.Danger" Clicked="@(async () => await RemoveProduct(item.Id, Customer.Id))"><Icon Name="IconName.Delete" /></Button>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </Column>
</Row>
<Row Class="pos-foot">
    <Column ColumnSize="ColumnSize.Is1">
        <Button Color="Color.Dark"
                Clicked="OpenSetupModal">
            Setup
        </Button>
    </Column>
    <Column ColumnSize="ColumnSize.Is7">
        <Slider TValue="int" Value="@GlobalProfit" ValueChanged="@ChangeGlobalProfit" Min="50" Max="400" Step="1" />
        <p>@(GlobalProfit) %</p>
    </Column>
    <Column ColumnSize="ColumnSize.Is4">
        <div class="cart-checkout">
            <div>Total: @(Customer?.Orders?.Sum(_=>_.Price).ToString("0.00") ?? "0.00")kr</div>
            <Row>
                <Column>
                    <Button Clicked="Checkout"
                            Disabled="@(!(Customer?.Orders?.Any() ?? false))"
                            Class="cart-buttons"
                            Color="Color.Warning">
                        Checkout
                    </Button>
                </Column>
                <Column>
                    <Button Clicked="ParkCustomer"
                            Class="cart-buttons"
                            Color="Color.Warning">
                        Park
                    </Button>
                </Column>
            </Row>
        </div>
    </Column>
</Row>
